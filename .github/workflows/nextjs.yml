name: Deploy Next.js site to Pages

on:
  # Ejecutar en push a la rama main
  push:
    branches: ["main"]

  # Permitir ejecución manual desde la pestaña Actions
  workflow_dispatch:

# Configurar permisos de GITHUB_TOKEN para permitir deployment a GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permitir un deployment concurrente, cancelar en progreso para nuevos cambios
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automáticamente inyectar basePath en la configuración de Next.js
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generar una nueva cache cuando cambie package-lock.json
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # Si no hay match exacto, usar la cache más reciente disponible
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build with Next.js
        run: npm run build

      - name: Create .nojekyll file
        run: touch ./out/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Job de deployment
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
